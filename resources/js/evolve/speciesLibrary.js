// Generated by CoffeeScript 1.4.0
(function() {
  var SpeciesLibrary;

  SpeciesLibrary = (function() {

    function SpeciesLibrary() {
      this._speciesStore = new CORE.species.SpeciesStore();
    }

    SpeciesLibrary.prototype.placeProcess = function(process, parentProcess) {
      var hashcode, parentSpecies, species;
      hashcode = process.getHashCode();
      species = this._speciesStore.findSpecies(process.memory, hashcode);
      if (species === null) {
        parentSpecies = (parentProcess === null ? null : parentProcess.species);
        species = new CORE.species.Species({
          code: process.memory.slice(),
          hashCode: hashcode,
          count: 1,
          parent: parentSpecies,
          id: process.id,
          processes: [process.id],
          name: process.name
        });
        this._speciesStore.addSpecies(species);
        jQuery(document).trigger(CORE.environment.EVENT_SPECIES_CREATED, [species]);
      } else {
        species.processes.push(process.id);
        species.count += 1;
      }
      process.species = species;
      if (species.processes.length >= CORE.environment.VALID_SPECIES && !(species.saved || species.beingSaved)) {
        CORE.displayMessage("New {name} species evolved and is being saved to the genebank".supplant(species));
        CORE.data.saveSpecies(species, function() {
          console.info("species saved(", species.name, species.processes.length, ")");
          species.saved = true;
          return species.beingSaved = false;
        });
        species.beingSaved = true;
      }
      if (species.processes.length >= CORE.environment.SUCCESS_PROXY && !(species.successScored || species.beingSuccessScored) && species.saved) {
        CORE.displayMessage("{name} species successful".supplant(species));
        CORE.data.putScore(species, 1, function() {
          species.successScored = true;
          return species.beingSuccessScored = false;
        });
        species.beingSuccessScored = true;
      }
      return species;
    };

    SpeciesLibrary.prototype.removeProcess = function(process) {
      if (process.species === undefined) {
        $.debug("species is undefined");
      }
      CORE.removeElementFromArray(process.species.processes, process.id);
      if (process.species.processes.length === 0) {
        this._speciesStore.removeSpecies(process.species);
        if (process.species.saved) {
          CORE.displayMessage("{name} species extinct".supplant(process.species));
          CORE.data.putScore(process.species, -1);
        }
      }
      return process.species = null;
    };

    SpeciesLibrary.prototype.addSpeciesFromServer = function(species) {
      species.hashCode = CORE.util.getHashCode(species.code);
      species.processes = [];
      species.count = 0;
      this._speciesStore.addSpecies(species);
      return jQuery(document).trigger(CORE.environment.EVENT_SPECIES_CREATED, [species]);
    };

    SpeciesLibrary.prototype.getStore = function() {
      return this._speciesStore;
    };

    return SpeciesLibrary;

  })();

  CORE.speciesLibrary = function() {
    return this._speciesLibrary || (this._speciesLibrary = new SpeciesLibrary());
  };

}).call(this);
